/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1392
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.User;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The list of commands.
 */
@ApiModel(description = "The list of commands.")

public class ProcessedCommand {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private User userId = null;

  public static final String SERIALIZED_NAME_PROCESSED_TIME = "processedTime";
  @SerializedName(SERIALIZED_NAME_PROCESSED_TIME)
  private OffsetDateTime processedTime;

  public ProcessedCommand description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the command issued.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "The description of the command issued.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProcessedCommand path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The unique identifier for the command including the request id.
   * @return path
  **/
  @ApiModelProperty(value = "The unique identifier for the command including the request id.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public ProcessedCommand userId(User userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")
  public User getUserId() {
    return userId;
  }

  public void setUserId(User userId) {
    this.userId = userId;
  }

  public ProcessedCommand processedTime(OffsetDateTime processedTime) {
    this.processedTime = processedTime;
    return this;
  }

   /**
   * The asAt datetime that the events published by the processing of this command were committed to LUSID.
   * @return processedTime
  **/
  @ApiModelProperty(required = true, value = "The asAt datetime that the events published by the processing of this command were committed to LUSID.")
  public OffsetDateTime getProcessedTime() {
    return processedTime;
  }

  public void setProcessedTime(OffsetDateTime processedTime) {
    this.processedTime = processedTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessedCommand processedCommand = (ProcessedCommand) o;
    return Objects.equals(this.description, processedCommand.description) &&
        Objects.equals(this.path, processedCommand.path) &&
        Objects.equals(this.userId, processedCommand.userId) &&
        Objects.equals(this.processedTime, processedCommand.processedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, path, userId, processedTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessedCommand {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    processedTime: ").append(toIndentedString(processedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
