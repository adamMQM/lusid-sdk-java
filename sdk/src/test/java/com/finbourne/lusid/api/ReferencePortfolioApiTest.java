/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1383
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.CreateReferencePortfolioRequest;
import com.finbourne.lusid.model.GetReferencePortfolioConstituentsResponse;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.Portfolio;
import com.finbourne.lusid.model.ResourceListOfConstituentsAdjustmentHeader;
import com.finbourne.lusid.model.UpsertReferencePortfolioConstituentsRequest;
import com.finbourne.lusid.model.UpsertReferencePortfolioConstituentsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReferencePortfolioApi
 */
@Ignore
public class ReferencePortfolioApiTest {

    private final ReferencePortfolioApi api = new ReferencePortfolioApi();

    
    /**
     * Create reference portfolio
     *
     * Create a new reference portfolio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReferencePortfolioTest() throws ApiException {
        String scope = null;
        CreateReferencePortfolioRequest referencePortfolio = null;
        Portfolio response = api.createReferencePortfolio(scope, referencePortfolio);

        // TODO: test validations
    }
    
    /**
     * Get constituents
     *
     * Get constituents from the specified reference portfolio at an effective time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReferencePortfolioConstituentsTest() throws ApiException {
        String scope = null;
        String code = null;
        String effectiveAt = null;
        OffsetDateTime asAt = null;
        List<String> propertyKeys = null;
        GetReferencePortfolioConstituentsResponse response = api.getReferencePortfolioConstituents(scope, code, effectiveAt, asAt, propertyKeys);

        // TODO: test validations
    }
    
    /**
     * List constituents adjustments
     *
     * List the constituent adjustments made to the specified reference portfolio over a specified interval of effective time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listConstituentsAdjustmentsTest() throws ApiException {
        String scope = null;
        String code = null;
        String fromEffectiveAt = null;
        String toEffectiveAt = null;
        OffsetDateTime asAtTime = null;
        ResourceListOfConstituentsAdjustmentHeader response = api.listConstituentsAdjustments(scope, code, fromEffectiveAt, toEffectiveAt, asAtTime);

        // TODO: test validations
    }
    
    /**
     * Add constituents
     *
     * Add constituents to the specified reference portfolio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void upsertReferencePortfolioConstituentsTest() throws ApiException {
        String scope = null;
        String code = null;
        UpsertReferencePortfolioConstituentsRequest constituents = null;
        UpsertReferencePortfolioConstituentsResponse response = api.upsertReferencePortfolioConstituents(scope, code, constituents);

        // TODO: test validations
    }
    
}
