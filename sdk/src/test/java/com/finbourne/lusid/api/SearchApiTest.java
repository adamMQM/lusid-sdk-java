/*
 * LUSID API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.10.1383
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import com.finbourne.lusid.model.ResourceListOfPortfolioGroup;
import com.finbourne.lusid.model.ResourceListOfPortfolioSearchResult;
import com.finbourne.lusid.model.ResourceListOfPropertyDefinition;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Ignore
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    
    /**
     * [DEPRECATED] Portfolio groups search
     *
     * Search across all portfolio groups across all scopes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void portfolioGroupsSearchTest() throws ApiException {
        Object request = null;
        String filter = null;
        ResourceListOfPortfolioGroup response = api.portfolioGroupsSearch(request, filter);

        // TODO: test validations
    }
    
    /**
     * [DEPRECATED] Portfolios search
     *
     * Search across all portfolios across all scopes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void portfoliosSearchTest() throws ApiException {
        Object request = null;
        String filter = null;
        ResourceListOfPortfolioSearchResult response = api.portfoliosSearch(request, filter);

        // TODO: test validations
    }
    
    /**
     * [DEPRECATED] Search property definitions
     *
     * Search across all user defined property definitions across all scopes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void propertiesSearchTest() throws ApiException {
        Object request = null;
        String filter = null;
        ResourceListOfPropertyDefinition response = api.propertiesSearch(request, filter);

        // TODO: test validations
    }
    
}
